
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: sans-serif;
}

.container{
    font-weight: 600;
    border: 5px solid cyan;
    margin: 10px;
    display: grid;
    /*
     display: grid; - Puxa o grid
    */

    grid-template-columns: repeat(3, 1fr);

    /*
     repeat(3, 100px) - crie 3 colunas de 100px.

     minmax(100px, 1fr) - 100px é o minimo que pode fica e 1fr é o maximo. 
     Resumindo o maximo dele vai fica o espaço que tiver sobrando e o minino não diminue de 100px

     auto-fit - cria varias CL ate colocar todo conteudo na tela e cria quebra de linhas se for ultrapassar os limites da tela!

     auto-fill - gera novas celulas na tela para ficar organizado, não estica o conteudo mantem ele do mesmo tamanho(100px), tem quebra de linha.
    */

    /*
     grid-template-columns: 1fr 1fr; - Aqui você pode determinar quantas colunas vão ter. e qual tamanho cada uma vai ter.

     1fr - 1 fração do espaço ela pega todo o espaço disponivel 
     Exemplo (1fr, auto) a 1fr vai pega todo o espaço deixando só o espaço necessario para aperecer na tela para o auto.
    */

    grid-template-rows: auto;
    /*
     grid-template-rows: auto 200px; - Aqui você pode determinar linhas e qual tanho cada uma vai ter.
    */

    grid-auto-rows: auto;
    /*
     grid-auto-rows: 100px; - Toda linha que for criada automatica que não foi declarada vai ter (100px).

     grid-auto-columns: 100px; - Toda coluna que for criada automatica que não foi declarada vai ter (100px).
    */
    gap: 10px;
}

.item {
    background:deeppink;
}

.item-2{
    grid-row: 1 / 3; /* start / end */
    /*
     grid-row-start: 1; - linha que ele vai começar. 
     grid-row-end: 3; - linha que ele vai terminar. 
     Forma abreviada = grid-row: 1 / 3;
    */

    grid-column: 2 / 4; /* start / end */
    /*
     grid-column-start: 2; - coluna que ele vai começar. 
     grid-column-end: 4; - coluna que ele vai terminar. 
     Forma abreviada = grid-column: 2 / 4;
    */
}

.item-7{
    grid-row: 4 / span 2; /* start / pula 2 linhas */
    /*
     span - pular linhas (span 2) - pular 2 linhas = 4 foi pro 6.
    */

    grid-column: 1 / span 3; /* start / pula 3 colunas */
    /*
     span - pular colunas (span 3) - pular 3 colunas = 1 foi pro 4.
    */
}